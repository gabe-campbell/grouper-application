{"ast":null,"code":"import \"source-map-support/register\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\nexport async function main(event, context) {\n  const params = {\n    TableName: process.env.tableName,\n    // 'Key' defines the partition key and sort key of the item to be removed\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'noteId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      noteId: event.pathParameters.id\n    }\n  };\n\n  try {\n    await dynamoDbLib.call(\"delete\", params);\n    return success({\n      status: true\n    });\n  } catch (e) {\n    return failure({\n      status: false\n    });\n  }\n}","map":{"version":3,"sources":["/Users/Gabe_Campbell1/GrouperApp/delete.js"],"names":["dynamoDbLib","success","failure","main","event","context","params","TableName","process","env","tableName","Key","userId","requestContext","identity","cognitoIdentityId","noteId","pathParameters","id","call","status","e"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qBAAjC;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AACzC,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADV;AAEb;AACA;AACA;AACAC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAER,KAAK,CAACS,cAAN,CAAqBC,QAArB,CAA8BC,iBADnC;AAEHC,MAAAA,MAAM,EAAEZ,KAAK,CAACa,cAAN,CAAqBC;AAF1B;AALQ,GAAf;;AAWA,MAAI;AACF,UAAMlB,WAAW,CAACmB,IAAZ,CAAiB,QAAjB,EAA2Bb,MAA3B,CAAN;AACA,WAAOL,OAAO,CAAC;AAAEmB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAOnB,OAAO,CAAC;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACD;AACF","sourcesContent":["import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n  const params = {\n    TableName: process.env.tableName,\n    // 'Key' defines the partition key and sort key of the item to be removed\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'noteId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      noteId: event.pathParameters.id\n    }\n  };\n\n  try {\n    await dynamoDbLib.call(\"delete\", params);\n    return success({ status: true });\n  } catch (e) {\n    return failure({ status: false });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}