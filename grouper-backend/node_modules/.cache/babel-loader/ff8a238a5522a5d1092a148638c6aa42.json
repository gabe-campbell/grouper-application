{"ast":null,"code":"import \"source-map-support/register\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\nexport async function main(event, context) {\n  const params = {\n    TableName: process.env.tableName,\n    // 'KeyConditionExpression' defines the condition for the query\n    // - 'userId = :userId': only return items with matching 'userId'\n    //   partition key\n    // 'ExpressionAttributeValues' defines the value in the condition\n    // - ':userId': defines 'userId' to be Identity Pool identity id\n    //   of the authenticated user\n    KeyConditionExpression: \"userId = :userId\",\n    ExpressionAttributeValues: {\n      \":userId\": event.requestContext.identity.cognitoIdentityId\n    }\n  };\n\n  try {\n    const result = await dynamoDbLib.call(\"query\", params); // Return the matching list of items in response body\n\n    return success(result.Items);\n  } catch (e) {\n    return failure({\n      status: false\n    });\n  }\n}","map":{"version":3,"sources":["/Users/Gabe_Campbell1/GrouperApp/grouper-backend/list.js"],"names":["dynamoDbLib","success","failure","main","event","context","params","TableName","process","env","tableName","KeyConditionExpression","ExpressionAttributeValues","requestContext","identity","cognitoIdentityId","result","call","Items","e","status"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qBAAjC;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AACzC,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADV;AAEb;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,sBAAsB,EAAE,kBARX;AASbC,IAAAA,yBAAyB,EAAE;AACzB,iBAAWR,KAAK,CAACS,cAAN,CAAqBC,QAArB,CAA8BC;AADhB;AATd,GAAf;;AAcA,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMhB,WAAW,CAACiB,IAAZ,CAAiB,OAAjB,EAA0BX,MAA1B,CAArB,CADE,CAEF;;AACA,WAAOL,OAAO,CAACe,MAAM,CAACE,KAAR,CAAd;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACV,WAAOjB,OAAO,CAAC;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACD;AACF","sourcesContent":["import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n  const params = {\n    TableName: process.env.tableName,\n    // 'KeyConditionExpression' defines the condition for the query\n    // - 'userId = :userId': only return items with matching 'userId'\n    //   partition key\n    // 'ExpressionAttributeValues' defines the value in the condition\n    // - ':userId': defines 'userId' to be Identity Pool identity id\n    //   of the authenticated user\n    KeyConditionExpression: \"userId = :userId\",\n    ExpressionAttributeValues: {\n      \":userId\": event.requestContext.identity.cognitoIdentityId\n    }\n  };\n\n  try {\n    const result = await dynamoDbLib.call(\"query\", params);\n    // Return the matching list of items in response body\n    return success(result.Items);\n  } catch (e) {\n    return failure({ status: false });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}